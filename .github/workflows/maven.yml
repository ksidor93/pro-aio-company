# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

    - name: Docker Login
      # You may pin to the exact commit or the version.
      # uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
      uses: docker/login-action@v2.1.0
      with:
        # Server address of Docker registry. If not set then will default to Docker Hub
        registry: # optional
        # Username used to log against the Docker registry
        username: # optional
        # Password or personal access token used to log against the Docker registry
        password: # optional
        # Specifies whether the given registry is ECR (auto, true or false)
        ecr: # optional, default is auto
        # Log out from the Docker registry at the end of a job
        logout: # optional, default is true
    
    - name: Build and push Docker images
      # You may pin to the exact commit or the version.
      # uses: docker/build-push-action@c56af957549030174b10d6867f20e78cfd7debc5
      uses: docker/build-push-action@v3.2.0
      with:
        # List of a customs host-to-IP mapping (e.g., docker:10.180.0.1)
        add-hosts: # optional
        # List of extra privileged entitlement (e.g., network.host,security.insecure)
        allow: # optional
        # List of build-time variables
        build-args: # optional
        # List of additional build contexts (e.g., name=path)
        build-contexts: # optional
        # Builder instance
        builder: # optional
        # List of external cache sources for buildx (e.g., user/app:cache, type=local,src=path/to/dir)
        cache-from: # optional
        # List of cache export destinations for buildx (e.g., user/app:cache, type=local,dest=path/to/dir)
        cache-to: # optional
        # Optional parent cgroup for the container used in the build
        cgroup-parent: # optional
        # Build's context is the set of files located in the specified PATH or URL
        context: # optional
        # Path to the Dockerfile
        file: # optional
        # List of metadata for an image
        labels: # optional
        # Load is a shorthand for --output=type=docker
        load: # optional, default is false
        # Set the networking mode for the RUN instructions during build
        network: # optional
        # Do not use cache when building the image
        no-cache: # optional, default is false
        # Do not cache specified stages
        no-cache-filters: # optional
        # List of output destinations (format: type=local,dest=path)
        outputs: # optional
        # List of target platforms for build
        platforms: # optional
        # Always attempt to pull all referenced images
        pull: # optional, default is false
        # Push is a shorthand for --output=type=registry
        push: # optional, default is false
        # List of secrets to expose to the build (e.g., key=string, GIT_AUTH_TOKEN=mytoken)
        secrets: # optional
        # List of secret files to expose to the build (e.g., key=filename, MY_SECRET=./secret.txt)
        secret-files: # optional
        # Size of /dev/shm (e.g., 2g)
        shm-size: # optional
        # List of SSH agent socket or keys to expose to the build
        ssh: # optional
        # List of tags
        tags: # optional
        # Sets the target stage to build
        target: # optional
        # Ulimit options (e.g., nofile=1024:1024)
        ulimit: # optional
        # GitHub Token used to authenticate against a repository for Git context
        github-token: # optional, default is ${{ github.token }}
        
    - name: Deploy a Portainer stack
      # You may pin to the exact commit or the version.
      # uses: carlrygart/portainer-stack-deploy@843b5bdb502309b6c45e250e75b550413194dc74
      uses: carlrygart/portainer-stack-deploy@v1.3.0
      with:
        # Portainer host, eg. https://myportainer.instance.com
        portainer-host: 
        # Username for the Portainer login. NOTE: Do not use admin account! Create a new CI specific login
        username: 
        # Password for the Portainer login
        password: 
        # ID of the swarm. Only required if you deploy to a swarm.
        swarm-id: # optional
        # ID of the Portainer node to deploy to
        endpoint-id: # optional
        # Name for the Portainer stack
        stack-name: 
        # The path to the docker-compose stack stack definition file, eg. stack-definition.yml
        stack-definition: 
        # If given, these variables will be replaced in docker-compose file by handlebars
        template-variables: # optional
        # The URI of the container image to insert into the stack definition, eg. docker.pkg.github.com/username/repo/master
        image: # optional
